
if $(QT_PATH)
{

	MOCPREFIX = moc_ ;
	UIPREFIX  = ui_ ;
	QRCPREFIX = qrc_ ;
	
	qt_ext_include_search_paths = ;
	qt_ext_include_search_paths += [ FDirName $(QT_PATH) include ] ;
	qt_ext_include_search_paths += [ FDirName $(QT_PATH) mkspecs default ] ;
	
	qt_ext_defines = ;
	qt_ext_defines += UNICODE ;
	qt_ext_defines += QT_DLL ;
	qt_ext_defines += QT_LARGEFILE_SUPPORT ;
	qt_ext_defines += QT_GUI_LIB ;
	qt_ext_defines += QT_CORE_LIB ;
	qt_ext_defines += QT_THREAD_SUPPORT ;
	qt_ext_defines += QT_NEEDS_DOMAIN ;

	qt_ext_link_search_paths = [ FDirName $(QT_PATH) lib ] ;
	if $(NT)
	{
		if $(CONFIGURATION) = debug
		{
			qt_ext_library_files = QtMaind QtGuid4 QtCored4 QtSvgd4 ;
		}
		else
		{
			qt_ext_library_files = QtMain QtGui4 QtCore4 QtSvg4 ;
		}
	}
	else
	{
		qt_ext_library_files = QtGui QtCore QtSvg ;
	}

	TOOL_QT_MOC = [ FDirName $(QT_PATH) bin moc$(SUFEXE) ] ;
	TOOL_QT_UIC = [ FDirName $(QT_PATH) bin uic$(SUFEXE) ] ;
	TOOL_QT_RCC = [ FDirName $(QT_PATH) bin rcc$(SUFEXE) ] ;

}

llvm_base_path = [ FDirName "c:" msys 1.0 ] ;
llvm_bin_path  = [ FDirName $(llvm_base_path) bin ] ;
llvm_ext_link_search_paths    = [ FDirName $(llvm_base_path) lib ] ;
llvm_ext_include_search_paths = [ FDirName $(llvm_base_path) include ] ;

LLVM_TBLGEN = [ FDirName $(llvm_bin_path) tblgen$(SUFEXE) ] ;

llvm_ext_defines = ;
llvm_ext_defines += _GNU_SOURCE ;
llvm_ext_defines += __STDC_LIMIT_MACROS ;
llvm_ext_defines += __STDC_CONSTANT_MACROS ;

llvm_ext_library_files = ;
llvm_ext_library_files += LLVMCore ;
llvm_ext_library_files += LLVMSupport ;
llvm_ext_library_files += LLVMSystem ;
llvm_ext_library_files += ffi ;
llvm_ext_library_files += psapi ;
llvm_ext_library_files += imagehlp ;
llvm_ext_library_files += m ;
 
rule TableGen
{
	local _ret = ;
	local _t = ;
	local _f = ;
	local _p = $(1:B) ;
	_p = [ FDirName $(1:P) $(_p) ] ;

	Includes $(1) : $(_p)RegisterInfo.td ;
	Includes $(1) : $(_p)InstrInfo.td ;
	Includes $(_p)InstrInfo.td : $(_p)InstrFormats.td ;

	_t = $(_p)RegisterNames.h.inc ;
	_ret += $(_t) ;
	TBLGEN_FLAGS on $(_t) = -gen-register-enums ;
	tblgen $(_t) : $(1) ;
	
	_t = $(_p)RegisterInfo.h.inc ;
	_ret += $(_t) ;
	TBLGEN_FLAGS on $(_t) = -gen-register-desc-header ;
	tblgen $(_t) : $(1) ;

	_t = $(_p)RegisterInfo.inc ;
	_ret += $(_t) ;
	TBLGEN_FLAGS on $(_t) = -gen-register-desc ;
	tblgen $(_t) : $(1) ;

	_t = $(_p)InstrNames.inc ;
	_ret += $(_t) ;
	TBLGEN_FLAGS on $(_t) = -gen-instr-enums ;
	tblgen $(_t) : $(1) ;

	_t = $(_p)InstrInfo.inc ;
	_ret += $(_t) ;
	TBLGEN_FLAGS on $(_t) = -gen-instr-desc ;
	tblgen $(_t) : $(1) ;
	
	Depends $(_ret) : $(1) ;
	Clean clean : $(_ret) ;
	return $(_ret) ;
}
 
actions piecemeal tblgen
{
	$(LLVM_TBLGEN) -I=$(llvm_ext_include_search_paths) -I=$(2:P) $(TBLGEN_FLAGS) -o=$(1) $(2)
}
